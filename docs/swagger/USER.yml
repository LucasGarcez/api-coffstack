/users:
  get:
    summary: " (UsersController::list)"
    description: "GET A PAGINATED USER LIST"
    parameters: [
      {
          name: "page",
          description: "Number of the page",
          in: "query",
          required: false
        },
        {
          name: "per_page",
          description: "Number of how much users to show per page",
          in: "query",
          required: false
        },
        {
          name: "search",
          description: "Additional to search by user data",
          in: "query",
          required: false
        },
    ]
    tags: 
      - "USER"
    responses:
      401:
        description: "Unauthorized"
      403:
        description: "Forbidden"
    security:
      - BearerAuth:
          - "access"
/users/{id}:
    get:
      summary: " (UsersController::get)"
      description: "GET A USER BY ID"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "USER"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
    put:
      summary: " (UsersController::edit)"
      description: "UPDATE A USER BY ID"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "USER"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json: 
            schema:
              $ref: "#/components/schemas/User"
            example:
              firstName: "optional | Lucas"
              lastName: "optional | Garcez"
              username: "optional | lucas"
              email: "optional | lucas@gmail.com"
              password: "optional | lucas123"
              password_confirmation: "optional | lucas123"
    delete:
      summary: " (UsersController::delete)"
      description: "DELETE A USER BY ID"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "USER"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
          /messages/list: