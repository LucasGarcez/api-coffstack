/user/post:
    get:
      summary: " (route.ts)"
      description: "GET A PAGINATED POST LIST"
      parameters: [
        {
          name: "page",
          description: "Number of the page",
          in: "query",
          required: false
        },
        {
          name: "per_page",
          description: "Number of how much Posts to show per page",
          in: "query",
          required: false
        },
        {
          name: "search",
          description: "Additional to search by post data",
          in: "query",
          required: false
        },
      ]
      tags:
        - "POST"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
    post:
      summary: " (route.ts)"
      description: "CREATE A NEW POST"
      parameters: []
      tags:
        - "POST"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
            example:
              imageUrl: "string"
              text: "optional | string"
/user/post/{id}:
    get:
      summary: " (route.ts)"
      description: "GET A POST BY ID"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "POST"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
    put:
      summary: " (route.ts)"
      description: "UPDATE A POST BY ID"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "POST"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json: 
            schema:
              $ref: "#/components/schemas/Post"
            example:
              text: "optional | string"
    delete:
      summary: " (route.ts)"
      description: "DELETE USER BY ID"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - "POST"
      responses:
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      security:
        - BearerAuth:
            - "access"